"use strict";(self.webpackChunktech_writer_docs_portfolio=self.webpackChunktech_writer_docs_portfolio||[]).push([[316],{7138:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"api/avro_api_documentation","title":"Avro Python API","description":"Detailed API reference for Avro\'s Python modules \u2014 io, datafile, and schema.","source":"@site/docs/api/avro_api_documentation.md","sourceDirName":"api","slug":"/api/avro_api_documentation","permalink":"/tech-writer-47-docs-as-code/docs/api/avro_api_documentation","draft":false,"unlisted":false,"editUrl":"https://github.com/anandnr47/tech-writer-47-docs-as-code/edit/main/docs/api/avro_api_documentation.md","tags":[{"inline":true,"label":"avro","permalink":"/tech-writer-47-docs-as-code/docs/tags/avro"},{"inline":true,"label":"python","permalink":"/tech-writer-47-docs-as-code/docs/tags/python"},{"inline":true,"label":"api","permalink":"/tech-writer-47-docs-as-code/docs/tags/api"},{"inline":true,"label":"serialization","permalink":"/tech-writer-47-docs-as-code/docs/tags/serialization"}],"version":"current","sidebarPosition":2,"frontMatter":{"id":"avro_api_documentation","title":"Avro Python API","sidebar_label":"Avro Python API","sidebar_position":2,"tags":["avro","python","api","serialization"],"description":"Detailed API reference for Avro\'s Python modules \u2014 io, datafile, and schema."},"sidebar":"tutorialSidebar","previous":{"title":"OpenWeather API","permalink":"/tech-writer-47-docs-as-code/docs/api/openweather-api"},"next":{"title":"Sphinx: Getting Started","permalink":"/tech-writer-47-docs-as-code/docs/tutorials/sphinx-getting-started"}}');var d=n(4848),s=n(8453);const l={id:"avro_api_documentation",title:"Avro Python API",sidebar_label:"Avro Python API",sidebar_position:2,tags:["avro","python","api","serialization"],description:"Detailed API reference for Avro's Python modules \u2014 io, datafile, and schema."},o="Avro Python API Documentation",c={},a=[{value:"Overview",id:"overview",level:2},{value:"Module: <code>avro.io</code>",id:"module-avroio",level:2},{value:"Class: <code>BinaryEncoder</code>",id:"class-binaryencoder",level:3},{value:"Example",id:"example",level:4},{value:"Methods",id:"methods",level:4},{value:"<code>__init__(writer)</code>",id:"__init__writer",level:5},{value:"<code>write_null()</code>",id:"write_null",level:5},{value:"<code>write_boolean(value)</code>",id:"write_booleanvalue",level:5},{value:"<code>write_int(value)</code>",id:"write_intvalue",level:5},{value:"<code>write_long(value)</code>",id:"write_longvalue",level:5},{value:"<code>write_float(value)</code>",id:"write_floatvalue",level:5},{value:"<code>write_double(value)</code>",id:"write_doublevalue",level:5},{value:"<code>write_bytes(value)</code>",id:"write_bytesvalue",level:5},{value:"<code>write_utf8(value)</code>",id:"write_utf8value",level:5},{value:"Class: <code>BinaryDecoder</code>",id:"class-binarydecoder",level:3},{value:"Example",id:"example-1",level:4},{value:"Methods",id:"methods-1",level:4},{value:"<code>__init__(reader)</code>",id:"__init__reader",level:5},{value:"<code>read_null()</code>",id:"read_null",level:5},{value:"<code>read_boolean()</code>",id:"read_boolean",level:5},{value:"<code>read_int()</code>",id:"read_int",level:5},{value:"<code>read_long()</code>",id:"read_long",level:5},{value:"<code>read_float()</code>",id:"read_float",level:5},{value:"<code>read_double()</code>",id:"read_double",level:5},{value:"<code>read_bytes()</code>",id:"read_bytes",level:5},{value:"<code>read_utf8()</code>",id:"read_utf8",level:5},{value:"Module: <code>avro.datafile</code>",id:"module-avrodatafile",level:2},{value:"Class: <code>DataFileWriter</code>",id:"class-datafilewriter",level:3},{value:"Example",id:"example-2",level:4},{value:"Methods",id:"methods-2",level:4},{value:"<code>__init__(writer, datum_writer, writers_schema=None, codec=&#39;null&#39;)</code>",id:"__init__writer-datum_writer-writers_schemanone-codecnull",level:5},{value:"<code>append(datum)</code>",id:"appenddatum",level:5},{value:"<code>flush()</code>",id:"flush",level:5},{value:"<code>close()</code>",id:"close",level:5},{value:"Class: <code>DataFileReader</code>",id:"class-datafilereader",level:3},{value:"Example",id:"example-3",level:4},{value:"Methods",id:"methods-3",level:4},{value:"<code>__init__(reader, datum_reader)</code>",id:"__init__reader-datum_reader",level:5},{value:"<code>__iter__()</code>",id:"__iter__",level:5},{value:"<code>close()</code>",id:"close-1",level:5},{value:"Module: <code>avro.schema</code>",id:"module-avroschema",level:2},{value:"Class: <code>Schema</code>",id:"class-schema",level:3},{value:"Attributes",id:"attributes",level:4},{value:"Example",id:"example-4",level:4},{value:"Function: <code>parse(json_string)</code>",id:"function-parsejson_string",level:3},{value:"Example",id:"example-5",level:4},{value:"Data Encoding &amp; Decoding Flow",id:"data-encoding--decoding-flow",level:2},{value:"Exceptions Reference",id:"exceptions-reference",level:2}];function t(e){const r={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(r.header,{children:(0,d.jsx)(r.h1,{id:"avro-python-api-documentation",children:"Avro Python API Documentation"})}),"\n",(0,d.jsx)(r.h2,{id:"overview",children:"Overview"}),"\n",(0,d.jsxs)(r.p,{children:["This documentation provides details for classes, functions, and methods found in the ",(0,d.jsx)(r.code,{children:"avro.io"}),", ",(0,d.jsx)(r.code,{children:"avro.datafile"}),", and ",(0,d.jsx)(r.code,{children:"avro.schema"})," modules.\nIt is intended for Python developers who want to use Apache Avro for serialization, deserialization, and schema management."]}),"\n",(0,d.jsx)(r.hr,{}),"\n",(0,d.jsxs)(r.h2,{id:"module-avroio",children:["Module: ",(0,d.jsx)(r.code,{children:"avro.io"})]}),"\n",(0,d.jsxs)(r.h3,{id:"class-binaryencoder",children:["Class: ",(0,d.jsx)(r.code,{children:"BinaryEncoder"})]}),"\n",(0,d.jsx)(r.p,{children:"Encodes Avro objects into binary format and writes them to an output stream."}),"\n",(0,d.jsx)(r.h4,{id:"example",children:"Example"}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-python",children:'from avro.io import BinaryEncoder\nimport io\n\nbuffer = io.BytesIO()\nencoder = BinaryEncoder(buffer)\nencoder.write_int(42)\nencoder.write_utf8("hello")\n'})}),"\n",(0,d.jsx)(r.h4,{id:"methods",children:"Methods"}),"\n",(0,d.jsx)(r.h5,{id:"__init__writer",children:(0,d.jsx)(r.code,{children:"__init__(writer)"})}),"\n",(0,d.jsx)(r.p,{children:(0,d.jsx)(r.strong,{children:"Parameters"})}),"\n",(0,d.jsxs)(r.ul,{children:["\n",(0,d.jsxs)(r.li,{children:[(0,d.jsx)(r.code,{children:"writer"})," (",(0,d.jsx)(r.code,{children:"io.BufferedWriter"})," or similar): The writable output stream."]}),"\n"]}),"\n",(0,d.jsx)(r.h5,{id:"write_null",children:(0,d.jsx)(r.code,{children:"write_null()"})}),"\n",(0,d.jsxs)(r.p,{children:["Writes a null value.",(0,d.jsx)(r.br,{}),"\n",(0,d.jsx)(r.strong,{children:"Returns:"})," ",(0,d.jsx)(r.code,{children:"None"}),(0,d.jsx)(r.br,{}),"\n",(0,d.jsx)(r.strong,{children:"Raises:"})," None"]}),"\n",(0,d.jsx)(r.h5,{id:"write_booleanvalue",children:(0,d.jsx)(r.code,{children:"write_boolean(value)"})}),"\n",(0,d.jsxs)(r.p,{children:["Writes a boolean value.",(0,d.jsx)(r.br,{}),"\n",(0,d.jsx)(r.strong,{children:"Parameters:"})]}),"\n",(0,d.jsxs)(r.ul,{children:["\n",(0,d.jsxs)(r.li,{children:[(0,d.jsx)(r.code,{children:"value"})," (",(0,d.jsx)(r.code,{children:"bool"}),"): Boolean value to encode.",(0,d.jsx)(r.br,{}),"\n",(0,d.jsx)(r.strong,{children:"Raises:"})," ",(0,d.jsx)(r.code,{children:"AvroTypeException"})," if value is not a boolean."]}),"\n"]}),"\n",(0,d.jsx)(r.h5,{id:"write_intvalue",children:(0,d.jsx)(r.code,{children:"write_int(value)"})}),"\n",(0,d.jsxs)(r.p,{children:["Writes a 32-bit integer using variable-length zig-zag encoding.",(0,d.jsx)(r.br,{}),"\n",(0,d.jsx)(r.strong,{children:"Parameters:"})]}),"\n",(0,d.jsxs)(r.ul,{children:["\n",(0,d.jsxs)(r.li,{children:[(0,d.jsx)(r.code,{children:"value"})," (",(0,d.jsx)(r.code,{children:"int"}),"): Integer to encode.",(0,d.jsx)(r.br,{}),"\n",(0,d.jsx)(r.strong,{children:"Raises:"})," ",(0,d.jsx)(r.code,{children:"AvroTypeException"})," if value is not an integer."]}),"\n"]}),"\n",(0,d.jsx)(r.h5,{id:"write_longvalue",children:(0,d.jsx)(r.code,{children:"write_long(value)"})}),"\n",(0,d.jsxs)(r.p,{children:["Writes a 64-bit long using variable-length zig-zag encoding.",(0,d.jsx)(r.br,{}),"\n",(0,d.jsx)(r.strong,{children:"Parameters:"})]}),"\n",(0,d.jsxs)(r.ul,{children:["\n",(0,d.jsxs)(r.li,{children:[(0,d.jsx)(r.code,{children:"value"})," (",(0,d.jsx)(r.code,{children:"int"}),"): Long integer to encode.",(0,d.jsx)(r.br,{}),"\n",(0,d.jsx)(r.strong,{children:"Raises:"})," ",(0,d.jsx)(r.code,{children:"AvroTypeException"}),"."]}),"\n"]}),"\n",(0,d.jsx)(r.h5,{id:"write_floatvalue",children:(0,d.jsx)(r.code,{children:"write_float(value)"})}),"\n",(0,d.jsxs)(r.p,{children:["Writes a 32-bit floating-point value.",(0,d.jsx)(r.br,{}),"\n",(0,d.jsx)(r.strong,{children:"Parameters:"})]}),"\n",(0,d.jsxs)(r.ul,{children:["\n",(0,d.jsxs)(r.li,{children:[(0,d.jsx)(r.code,{children:"value"})," (",(0,d.jsx)(r.code,{children:"float"}),"): Float value to encode.",(0,d.jsx)(r.br,{}),"\n",(0,d.jsx)(r.strong,{children:"Raises:"})," ",(0,d.jsx)(r.code,{children:"AvroTypeException"}),"."]}),"\n"]}),"\n",(0,d.jsx)(r.h5,{id:"write_doublevalue",children:(0,d.jsx)(r.code,{children:"write_double(value)"})}),"\n",(0,d.jsxs)(r.p,{children:["Writes a 64-bit floating-point value.",(0,d.jsx)(r.br,{}),"\n",(0,d.jsx)(r.strong,{children:"Parameters:"})]}),"\n",(0,d.jsxs)(r.ul,{children:["\n",(0,d.jsxs)(r.li,{children:[(0,d.jsx)(r.code,{children:"value"})," (",(0,d.jsx)(r.code,{children:"float"}),"): Double value to encode.",(0,d.jsx)(r.br,{}),"\n",(0,d.jsx)(r.strong,{children:"Raises:"})," ",(0,d.jsx)(r.code,{children:"AvroTypeException"}),"."]}),"\n"]}),"\n",(0,d.jsx)(r.h5,{id:"write_bytesvalue",children:(0,d.jsx)(r.code,{children:"write_bytes(value)"})}),"\n",(0,d.jsxs)(r.p,{children:["Writes byte data (length-prefixed).",(0,d.jsx)(r.br,{}),"\n",(0,d.jsx)(r.strong,{children:"Parameters:"})]}),"\n",(0,d.jsxs)(r.ul,{children:["\n",(0,d.jsxs)(r.li,{children:[(0,d.jsx)(r.code,{children:"value"})," (",(0,d.jsx)(r.code,{children:"bytes"}),"): Byte sequence to encode.",(0,d.jsx)(r.br,{}),"\n",(0,d.jsx)(r.strong,{children:"Raises:"})," ",(0,d.jsx)(r.code,{children:"AvroTypeException"}),"."]}),"\n"]}),"\n",(0,d.jsx)(r.h5,{id:"write_utf8value",children:(0,d.jsx)(r.code,{children:"write_utf8(value)"})}),"\n",(0,d.jsxs)(r.p,{children:["Writes a UTF-8 string.",(0,d.jsx)(r.br,{}),"\n",(0,d.jsx)(r.strong,{children:"Parameters:"})]}),"\n",(0,d.jsxs)(r.ul,{children:["\n",(0,d.jsxs)(r.li,{children:[(0,d.jsx)(r.code,{children:"value"})," (",(0,d.jsx)(r.code,{children:"str"}),"): String value to encode.",(0,d.jsx)(r.br,{}),"\n",(0,d.jsx)(r.strong,{children:"Raises:"})," ",(0,d.jsx)(r.code,{children:"AvroTypeException"}),"."]}),"\n"]}),"\n",(0,d.jsx)(r.hr,{}),"\n",(0,d.jsxs)(r.h3,{id:"class-binarydecoder",children:["Class: ",(0,d.jsx)(r.code,{children:"BinaryDecoder"})]}),"\n",(0,d.jsx)(r.p,{children:"Decodes Avro objects from a binary stream."}),"\n",(0,d.jsx)(r.h4,{id:"example-1",children:"Example"}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-python",children:"from avro.io import BinaryDecoder\nimport io\n\nbuffer = io.BytesIO(b'\\x84\\x02hello')\ndecoder = BinaryDecoder(buffer)\nnumber = decoder.read_int()\ntext = decoder.read_utf8()\n"})}),"\n",(0,d.jsx)(r.h4,{id:"methods-1",children:"Methods"}),"\n",(0,d.jsx)(r.h5,{id:"__init__reader",children:(0,d.jsx)(r.code,{children:"__init__(reader)"})}),"\n",(0,d.jsx)(r.p,{children:(0,d.jsx)(r.strong,{children:"Parameters:"})}),"\n",(0,d.jsxs)(r.ul,{children:["\n",(0,d.jsxs)(r.li,{children:[(0,d.jsx)(r.code,{children:"reader"})," (",(0,d.jsx)(r.code,{children:"io.BufferedReader"})," or similar): The readable input stream."]}),"\n"]}),"\n",(0,d.jsx)(r.h5,{id:"read_null",children:(0,d.jsx)(r.code,{children:"read_null()"})}),"\n",(0,d.jsxs)(r.p,{children:["Reads a null value.",(0,d.jsx)(r.br,{}),"\n",(0,d.jsx)(r.strong,{children:"Returns:"})," ",(0,d.jsx)(r.code,{children:"None"}),(0,d.jsx)(r.br,{}),"\n",(0,d.jsx)(r.strong,{children:"Raises:"})," None"]}),"\n",(0,d.jsx)(r.h5,{id:"read_boolean",children:(0,d.jsx)(r.code,{children:"read_boolean()"})}),"\n",(0,d.jsxs)(r.p,{children:["Reads a boolean value.",(0,d.jsx)(r.br,{}),"\n",(0,d.jsx)(r.strong,{children:"Returns:"})," ",(0,d.jsx)(r.code,{children:"bool"}),(0,d.jsx)(r.br,{}),"\n",(0,d.jsx)(r.strong,{children:"Raises:"})," ",(0,d.jsx)(r.code,{children:"EOFError"})," if stream ends unexpectedly."]}),"\n",(0,d.jsx)(r.h5,{id:"read_int",children:(0,d.jsx)(r.code,{children:"read_int()"})}),"\n",(0,d.jsxs)(r.p,{children:["Reads a 32-bit integer using zig-zag decoding.",(0,d.jsx)(r.br,{}),"\n",(0,d.jsx)(r.strong,{children:"Returns:"})," ",(0,d.jsx)(r.code,{children:"int"}),(0,d.jsx)(r.br,{}),"\n",(0,d.jsx)(r.strong,{children:"Raises:"})," ",(0,d.jsx)(r.code,{children:"EOFError"}),"."]}),"\n",(0,d.jsx)(r.h5,{id:"read_long",children:(0,d.jsx)(r.code,{children:"read_long()"})}),"\n",(0,d.jsxs)(r.p,{children:["Reads a 64-bit integer using zig-zag decoding.",(0,d.jsx)(r.br,{}),"\n",(0,d.jsx)(r.strong,{children:"Returns:"})," ",(0,d.jsx)(r.code,{children:"int"}),(0,d.jsx)(r.br,{}),"\n",(0,d.jsx)(r.strong,{children:"Raises:"})," ",(0,d.jsx)(r.code,{children:"EOFError"}),"."]}),"\n",(0,d.jsx)(r.h5,{id:"read_float",children:(0,d.jsx)(r.code,{children:"read_float()"})}),"\n",(0,d.jsxs)(r.p,{children:["Reads a 32-bit floating-point number.",(0,d.jsx)(r.br,{}),"\n",(0,d.jsx)(r.strong,{children:"Returns:"})," ",(0,d.jsx)(r.code,{children:"float"}),(0,d.jsx)(r.br,{}),"\n",(0,d.jsx)(r.strong,{children:"Raises:"})," ",(0,d.jsx)(r.code,{children:"EOFError"}),"."]}),"\n",(0,d.jsx)(r.h5,{id:"read_double",children:(0,d.jsx)(r.code,{children:"read_double()"})}),"\n",(0,d.jsxs)(r.p,{children:["Reads a 64-bit floating-point number.",(0,d.jsx)(r.br,{}),"\n",(0,d.jsx)(r.strong,{children:"Returns:"})," ",(0,d.jsx)(r.code,{children:"float"}),(0,d.jsx)(r.br,{}),"\n",(0,d.jsx)(r.strong,{children:"Raises:"})," ",(0,d.jsx)(r.code,{children:"EOFError"}),"."]}),"\n",(0,d.jsx)(r.h5,{id:"read_bytes",children:(0,d.jsx)(r.code,{children:"read_bytes()"})}),"\n",(0,d.jsxs)(r.p,{children:["Reads byte data.",(0,d.jsx)(r.br,{}),"\n",(0,d.jsx)(r.strong,{children:"Returns:"})," ",(0,d.jsx)(r.code,{children:"bytes"}),(0,d.jsx)(r.br,{}),"\n",(0,d.jsx)(r.strong,{children:"Raises:"})," ",(0,d.jsx)(r.code,{children:"EOFError"}),"."]}),"\n",(0,d.jsx)(r.h5,{id:"read_utf8",children:(0,d.jsx)(r.code,{children:"read_utf8()"})}),"\n",(0,d.jsxs)(r.p,{children:["Reads a UTF-8 string.",(0,d.jsx)(r.br,{}),"\n",(0,d.jsx)(r.strong,{children:"Returns:"})," ",(0,d.jsx)(r.code,{children:"str"}),(0,d.jsx)(r.br,{}),"\n",(0,d.jsx)(r.strong,{children:"Raises:"})," ",(0,d.jsx)(r.code,{children:"EOFError"}),"."]}),"\n",(0,d.jsx)(r.hr,{}),"\n",(0,d.jsxs)(r.h2,{id:"module-avrodatafile",children:["Module: ",(0,d.jsx)(r.code,{children:"avro.datafile"})]}),"\n",(0,d.jsxs)(r.h3,{id:"class-datafilewriter",children:["Class: ",(0,d.jsx)(r.code,{children:"DataFileWriter"})]}),"\n",(0,d.jsx)(r.p,{children:"Writes Avro objects to a file using a specified schema and codec."}),"\n",(0,d.jsx)(r.h4,{id:"example-2",children:"Example"}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-python",children:'import io, avro.schema\nfrom avro.datafile import DataFileWriter\nfrom avro.io import DatumWriter\n\nschema = avro.schema.parse(open("user.avsc").read())\nbuffer = io.BytesIO()\n\nwriter = DataFileWriter(buffer, DatumWriter(), schema)\nwriter.append({"name": "Alyssa", "favorite_number": 256})\nwriter.flush()\nwriter.close()\n'})}),"\n",(0,d.jsx)(r.h4,{id:"methods-2",children:"Methods"}),"\n",(0,d.jsx)(r.h5,{id:"__init__writer-datum_writer-writers_schemanone-codecnull",children:(0,d.jsx)(r.code,{children:"__init__(writer, datum_writer, writers_schema=None, codec='null')"})}),"\n",(0,d.jsx)(r.p,{children:(0,d.jsx)(r.strong,{children:"Parameters:"})}),"\n",(0,d.jsxs)(r.ul,{children:["\n",(0,d.jsxs)(r.li,{children:[(0,d.jsx)(r.code,{children:"writer"})," (",(0,d.jsx)(r.code,{children:"file"})," or ",(0,d.jsx)(r.code,{children:"io.BufferedWriter"}),"): Output file object."]}),"\n",(0,d.jsxs)(r.li,{children:[(0,d.jsx)(r.code,{children:"datum_writer"})," (",(0,d.jsx)(r.code,{children:"avro.io.DatumWriter"}),"): Used to serialize data."]}),"\n",(0,d.jsxs)(r.li,{children:[(0,d.jsx)(r.code,{children:"writers_schema"})," (",(0,d.jsx)(r.code,{children:"avro.schema.Schema"}),", optional): Schema for writing data."]}),"\n",(0,d.jsxs)(r.li,{children:[(0,d.jsx)(r.code,{children:"codec"})," (",(0,d.jsx)(r.code,{children:"str"}),"): Compression codec (",(0,d.jsx)(r.code,{children:"'null'"}),", ",(0,d.jsx)(r.code,{children:"'deflate'"}),", ",(0,d.jsx)(r.code,{children:"'snappy'"}),").",(0,d.jsx)(r.br,{}),"\n",(0,d.jsx)(r.strong,{children:"Raises:"})," ",(0,d.jsx)(r.code,{children:"AvroTypeException"})," for invalid schema."]}),"\n"]}),"\n",(0,d.jsx)(r.h5,{id:"appenddatum",children:(0,d.jsx)(r.code,{children:"append(datum)"})}),"\n",(0,d.jsxs)(r.p,{children:["Writes a datum (Avro record) to the file.",(0,d.jsx)(r.br,{}),"\n",(0,d.jsx)(r.strong,{children:"Parameters:"})]}),"\n",(0,d.jsxs)(r.ul,{children:["\n",(0,d.jsxs)(r.li,{children:[(0,d.jsx)(r.code,{children:"datum"})," (",(0,d.jsx)(r.code,{children:"dict"}),"): Data matching the writer\u2019s schema.",(0,d.jsx)(r.br,{}),"\n",(0,d.jsx)(r.strong,{children:"Raises:"})," ",(0,d.jsx)(r.code,{children:"AvroTypeException"})," if datum does not conform to schema."]}),"\n"]}),"\n",(0,d.jsx)(r.h5,{id:"flush",children:(0,d.jsx)(r.code,{children:"flush()"})}),"\n",(0,d.jsxs)(r.p,{children:["Flushes buffered data to disk.",(0,d.jsx)(r.br,{}),"\n",(0,d.jsx)(r.strong,{children:"Returns:"})," ",(0,d.jsx)(r.code,{children:"None"})]}),"\n",(0,d.jsx)(r.h5,{id:"close",children:(0,d.jsx)(r.code,{children:"close()"})}),"\n",(0,d.jsxs)(r.p,{children:["Closes the writer and file stream.",(0,d.jsx)(r.br,{}),"\n",(0,d.jsx)(r.strong,{children:"Returns:"})," ",(0,d.jsx)(r.code,{children:"None"})]}),"\n",(0,d.jsx)(r.hr,{}),"\n",(0,d.jsxs)(r.h3,{id:"class-datafilereader",children:["Class: ",(0,d.jsx)(r.code,{children:"DataFileReader"})]}),"\n",(0,d.jsx)(r.p,{children:"Reads Avro objects from a file."}),"\n",(0,d.jsx)(r.h4,{id:"example-3",children:"Example"}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-python",children:'from avro.datafile import DataFileReader\nfrom avro.io import DatumReader\n\nreader = DataFileReader(open("users.avro", "rb"), DatumReader())\nfor user in reader:\n    print(user)\nreader.close()\n'})}),"\n",(0,d.jsx)(r.h4,{id:"methods-3",children:"Methods"}),"\n",(0,d.jsx)(r.h5,{id:"__init__reader-datum_reader",children:(0,d.jsx)(r.code,{children:"__init__(reader, datum_reader)"})}),"\n",(0,d.jsx)(r.p,{children:(0,d.jsx)(r.strong,{children:"Parameters:"})}),"\n",(0,d.jsxs)(r.ul,{children:["\n",(0,d.jsxs)(r.li,{children:[(0,d.jsx)(r.code,{children:"reader"})," (",(0,d.jsx)(r.code,{children:"file"})," or ",(0,d.jsx)(r.code,{children:"io.BufferedReader"}),"): Input file object."]}),"\n",(0,d.jsxs)(r.li,{children:[(0,d.jsx)(r.code,{children:"datum_reader"})," (",(0,d.jsx)(r.code,{children:"avro.io.DatumReader"}),"): Used to deserialize data."]}),"\n"]}),"\n",(0,d.jsx)(r.h5,{id:"__iter__",children:(0,d.jsx)(r.code,{children:"__iter__()"})}),"\n",(0,d.jsxs)(r.p,{children:["Returns an iterator over data records.",(0,d.jsx)(r.br,{}),"\n",(0,d.jsx)(r.strong,{children:"Returns:"})," Iterator of deserialized records."]}),"\n",(0,d.jsx)(r.h5,{id:"close-1",children:(0,d.jsx)(r.code,{children:"close()"})}),"\n",(0,d.jsxs)(r.p,{children:["Closes the reader and file stream.",(0,d.jsx)(r.br,{}),"\n",(0,d.jsx)(r.strong,{children:"Returns:"})," ",(0,d.jsx)(r.code,{children:"None"})]}),"\n",(0,d.jsx)(r.hr,{}),"\n",(0,d.jsxs)(r.h2,{id:"module-avroschema",children:["Module: ",(0,d.jsx)(r.code,{children:"avro.schema"})]}),"\n",(0,d.jsxs)(r.h3,{id:"class-schema",children:["Class: ",(0,d.jsx)(r.code,{children:"Schema"})]}),"\n",(0,d.jsx)(r.p,{children:"Base class for Avro schemas."}),"\n",(0,d.jsx)(r.h4,{id:"attributes",children:"Attributes"}),"\n",(0,d.jsxs)(r.ul,{children:["\n",(0,d.jsxs)(r.li,{children:[(0,d.jsx)(r.code,{children:"type"})," (",(0,d.jsx)(r.code,{children:"str"}),"): The schema type (",(0,d.jsx)(r.code,{children:"record"}),", ",(0,d.jsx)(r.code,{children:"enum"}),", ",(0,d.jsx)(r.code,{children:"fixed"}),", etc.)."]}),"\n",(0,d.jsxs)(r.li,{children:[(0,d.jsx)(r.code,{children:"props"})," (",(0,d.jsx)(r.code,{children:"dict"}),"): Additional schema properties."]}),"\n"]}),"\n",(0,d.jsx)(r.h4,{id:"example-4",children:"Example"}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-python",children:'import avro.schema\nschema = avro.schema.parse(open("user.avsc").read())\nprint(schema.type)\n'})}),"\n",(0,d.jsx)(r.hr,{}),"\n",(0,d.jsxs)(r.h3,{id:"function-parsejson_string",children:["Function: ",(0,d.jsx)(r.code,{children:"parse(json_string)"})]}),"\n",(0,d.jsxs)(r.p,{children:["Parses a JSON string into a ",(0,d.jsx)(r.code,{children:"Schema"})," object."]}),"\n",(0,d.jsx)(r.p,{children:(0,d.jsx)(r.strong,{children:"Parameters:"})}),"\n",(0,d.jsxs)(r.ul,{children:["\n",(0,d.jsxs)(r.li,{children:[(0,d.jsx)(r.code,{children:"json_string"})," (",(0,d.jsx)(r.code,{children:"str"}),"): JSON representation of a schema."]}),"\n"]}),"\n",(0,d.jsx)(r.p,{children:(0,d.jsx)(r.strong,{children:"Returns:"})}),"\n",(0,d.jsxs)(r.ul,{children:["\n",(0,d.jsxs)(r.li,{children:[(0,d.jsx)(r.code,{children:"Schema"})," object"]}),"\n"]}),"\n",(0,d.jsx)(r.p,{children:(0,d.jsx)(r.strong,{children:"Raises:"})}),"\n",(0,d.jsxs)(r.ul,{children:["\n",(0,d.jsxs)(r.li,{children:[(0,d.jsx)(r.code,{children:"SchemaParseException"}),": Raised when schema parsing fails."]}),"\n"]}),"\n",(0,d.jsx)(r.h4,{id:"example-5",children:"Example"}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-python",children:'import avro.schema\nschema = avro.schema.parse(\'{"type": "string"}\')\n'})}),"\n",(0,d.jsx)(r.hr,{}),"\n",(0,d.jsx)(r.h2,{id:"data-encoding--decoding-flow",children:"Data Encoding & Decoding Flow"}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-mermaid",children:"flowchart LR\n    A[User Data] --\x3e B[DatumWriter]\n    B --\x3e C[BinaryEncoder]\n    C --\x3e D[DataFileWriter]\n    D --\x3e E[Avro File]\n    E --\x3e F[DataFileReader]\n    F --\x3e G[BinaryDecoder]\n    G --\x3e H[DatumReader]\n    H --\x3e I[Python Object]\n"})}),"\n",(0,d.jsx)(r.hr,{}),"\n",(0,d.jsx)(r.h2,{id:"exceptions-reference",children:"Exceptions Reference"}),"\n",(0,d.jsxs)(r.ul,{children:["\n",(0,d.jsxs)(r.li,{children:[(0,d.jsx)(r.strong,{children:"AvroTypeException"}),": Raised when data does not match schema."]}),"\n",(0,d.jsxs)(r.li,{children:[(0,d.jsx)(r.strong,{children:"SchemaParseException"}),": Raised when schema parsing fails."]}),"\n",(0,d.jsxs)(r.li,{children:[(0,d.jsx)(r.strong,{children:"EOFError"}),": Raised when reading beyond end of stream."]}),"\n"]}),"\n",(0,d.jsx)(r.hr,{}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.strong,{children:"Reference:"})," ",(0,d.jsx)(r.a,{href:"https://avro.apache.org/docs/current/",children:"Apache Avro Documentation"})]})]})}function h(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,d.jsx)(r,{...e,children:(0,d.jsx)(t,{...e})}):t(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>l,x:()=>o});var i=n(6540);const d={},s=i.createContext(d);function l(e){const r=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:l(e.components),i.createElement(s.Provider,{value:r},e.children)}}}]);